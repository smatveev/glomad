@page "/"
@using Glomad.net.Data; 

@*<h1>Hello, world!</h1>

    Welcome to your new app.

    <SurveyPrompt Title="How is Blazor working for you?" />*@


@inject HttpClient Http

<h1>Discovering the routes</h1>

<p>Based on visa first better conditions</p>

<input type="text" list="countries" @bind-value="@searchTerm" />
<datalist id="countries">
    @foreach (var c in countries)
    {
        <option>@c</option>
    }
</datalist>
<input type="button" value="Search" @onclick="@SearchIssues" />


@if (routes == null)
{
    @*<p><em>Loading...</em></p>*@
}
else
{

    <div class="row row-cols-1 row-cols-lg-3 align-items-stretch g-4 py-5">

        @foreach (Route route in routes)
        {
            @foreach (Country c in route.Countries)
            {
                <div class="col" style="padding-bottom: 24px;">
                    <div class="card card-cover h-100 overflow-hidden text-white bg-dark rounded-5 shadow-lg" style="background-image: url(./images/@c.Image);">
                        <div class="d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1">
                            <h2 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold">@c.Name</h2>
                            <h4 class="pt-5 mt-5 mb-4 display-6 lh-1 fw-bold">@c.Season</h4>
                            <ul class="d-flex list-unstyled mt-auto">
                                @*<li class="me-auto">
                                    <img src="https://github.com/twbs.png" alt="Bootstrap" width="32" height="32" class="rounded-circle border border-white">
                                </li>
                                <li class="d-flex align-items-center me-3">
                                    <svg class="bi me-2" width="1em" height="1em"><use xlink:href="#geo-fill"></use></svg>
                                    <small>Earth</small>
                                </li>*@
                                <li class="d-flex align-items-center">
                                    <svg class="bi me-2" width="1em" height="1em"><use xlink:href="#calendar3"></use></svg>
                                    <small>Visa for days: @c.VisaDays</small>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            }
        }

    </div>
}

@code {
    //private WeatherForecast[] forecasts;
    private List<Route> routes;
    private string[] countries;
    private string searchTerm;

    protected override void OnInitialized()
    {
        //routes = await Http.GetFromJsonAsync<Routes[]>("sample-data/weather.json");
        //routes = new List<Routes>();

        //routes.Add(new Routes());
        //routes.Add(new Routes());
        //routes.Add(new Routes());

        var c = new Country();
        countries = c.GetCountries();
    }

    async Task SearchIssues()
    {
        var ss = searchTerm;
        int a = 1;

        routes = new PreparedRoutes().GetRoutes();
        //routes.Add(new Routes());
    }    
}
