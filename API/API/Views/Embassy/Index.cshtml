@using System.Web
@using System.Globalization;
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv

@model EmbassyViewModel

@{
    ViewData["Title"] = $"{(Model.EmbassyWithCountry.Embassy.Name == null ? $"Embassy of {Model.Country} in {Model.EmbassyWithCountry.Country}, {Model.EmbassyWithCountry.City} in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}." : $"{Model.EmbassyWithCountry.Embassy.Name}, in {Model.EmbassyWithCountry.City} in in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}.")}";
    ViewData["MetaDescription"] = $"{(Model.EmbassyWithCountry.Embassy.Name == null ? $"Embassy of {Model.Country} in {Model.EmbassyWithCountry.Country}, {Model.EmbassyWithCountry.City} in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}. Actual address, phone, emails, opening hours." : $"{Model.EmbassyWithCountry.Embassy.Name}, in {Model.EmbassyWithCountry.City} in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}. Actual address, phone, emails, opening hours.")}";

    string bgimage = Model.Country + ".jpg";
    var path = System.IO.Path.Combine(hostingEnv.WebRootPath, bgimage);
    if (!System.IO.File.Exists(path))
    {
        bgimage = "nocover.jpg";
    }
}

<div class="hero-bg px-4 py-5 text-white text-center" style="background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.7)), url('/@bgimage')">
    <h1 class="text-white py-5 shadowed">Embassy of @Model.Country in @Model.EmbassyWithCountry.Country, @Model.EmbassyWithCountry.City</h1>
    @*@if (Model.EmbassyWithCountry.Embassy.Name != null)
    {
        <h1 class="display-5 fw-bold">@Model.EmbassyWithCountry.Embassy.Name</h1>
    }
    else
    {
        <h1 class="display-5 fw-bold">Embassy of @Model.Country in @Model.EmbassyWithCountry.Country, @Model.EmbassyWithCountry.City</h1>
    }*@


    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/@Model.Country">@Model.Country</a></li>
            <li class="breadcrumb-item active" aria-current="page">Embassy of @Model.Country in @Model.EmbassyWithCountry.Country, @Model.EmbassyWithCountry.City</li>
        </ol>
    </nav>
</div>

<section class="container py-3">
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active" href="#info" data-bs-toggle="tab">🧐 Info</a>
        </li>
    </ul>

    <div class="row">

        @{
            string title;
            if(Model.EmbassyWithCountry.Embassy.Name != null){
                title = Html.Raw(HttpUtility.HtmlDecode(Model.EmbassyWithCountry.Embassy.Name)) + " in " + Model.EmbassyWithCountry.City;
            }                
            else {
                title = Html.Raw(HttpUtility.HtmlDecode($"Embassy of {Model.Country} in {Model.EmbassyWithCountry.Country}, {Model.EmbassyWithCountry.City}").Replace("\n", "<br/>")).ToString();
            }
        }

        <h2 itemprop="name" class="text-break fw-bold text-center p-4 mb-3">🏢 @title</h2>


        <div class="col-md-6 text-break" id="info" itemscope="" itemtype="http://schema.org/GovernmentPermit">

            @if (Model.EmbassyWithCountry.Embassy != null)
            {
                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Address)) 
                {
                    <p itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
                        📍 <small class="text-muted">Address: </small>@Model.EmbassyWithCountry.Embassy.Address</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.WorkingHours))
                {
                    <p>🕜 <small class="text-muted">Office hours: </small>@Html.Raw(Model.EmbassyWithCountry.Embassy.WorkingHours)</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Phone))
                {
                    <p itemprop="telephone">
                        ☎ <small class="text-muted">Phone: </small>@Html.Raw(Model.EmbassyWithCountry.Embassy.Phone)</p>       
                }
                
                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Email))
                {
                    <p itemprop="email">
                        📧 <small class="text-muted">Email: </small>@Model.EmbassyWithCountry.Embassy.Email</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Url))
                {
                    <p>💻 <small class="text-muted">Website: </small><a href="@Model.EmbassyWithCountry.Embassy.Url" target="_blank" rel="noopener nofollow noreferrer">@Model.EmbassyWithCountry.Embassy.Url</a></p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.ProcessingTime))
                {
                    <p>🚴‍♂️ <small class="text-muted">Processing time: </small>@Model.EmbassyWithCountry.Embassy.ProcessingTime</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.SpecialConditions))
                {
                    <p>☝ <small class="text-muted">Special conditions: </small>@Model.EmbassyWithCountry.Embassy.SpecialConditions</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.ApplicationFormUrl))
                {
                    <p>🐱‍💻 <small class="text-muted">Visa application form: </small><a href="@Model.EmbassyWithCountry.Embassy.ApplicationFormUrl" target="_blank" rel="noopener nofollow noreferrer"> link</a></p>
                }                
            }
            else
            {
                <p>🤔 Details not found.. Working on it.</p>
            }

        </div>

        <div class="col-md-4">
            <div id="map" style="height: 400px; width: 600px;"></div>
        </div>
    </div>

</section>

@*@if (Model.EmbassyWithCountry.Embassy.Longitude != 0)
{*@
    @section Scripts {
<script>

    var map = L.map('map').setView([@Model.EmbassyWithCountry.Embassy.Latitude, @Model.EmbassyWithCountry.Embassy.Longitude], 13);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {  
            maxZoom: 19,
    }).addTo(map);

        L.marker([@Model.EmbassyWithCountry.Embassy.Latitude, @Model.EmbassyWithCountry.Embassy.Longitude]).addTo(map)
        .bindPopup('@title')
        .openPopup();

</script>
}
@*}*@