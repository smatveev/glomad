@using System.Web
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv

@model EmbassyViewModel

@{
    ViewData["Title"] = $"{Model.Country} embassy in {Model.EmbassyWithCountry.Country}, {Model.EmbassyWithCountry.City}";
    ViewData["MetaDescription"] = $"Checklist tourist visa to {Model.Country}. Working hours and processing time of {Model.Country} embassy in {Model.EmbassyWithCountry.Country}, {Model.EmbassyWithCountry.City}. Visa fees and visa duration.";

    string bgimage = Model.Country + ".jpg";
    var path = System.IO.Path.Combine(hostingEnv.WebRootPath, bgimage);
    if (!System.IO.File.Exists(path))
    {
        bgimage = "nocover.jpg";
    }
}

<div class="hero-bg px-4 py-5 text-white text-center" style="background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.7)), url('/@bgimage')">
    <h1 class="text-white py-5 shadowed">Embassy of @Model.Country in @Model.EmbassyWithCountry.Country, @Model.EmbassyWithCountry.City</h1>
    @*@if (Model.EmbassyWithCountry.Embassy.Name != null)
    {
        <h1 class="display-5 fw-bold">@Model.EmbassyWithCountry.Embassy.Name</h1>
    }
    else
    {
        <h1 class="display-5 fw-bold">Embassy of @Model.Country in @Model.EmbassyWithCountry.Country, @Model.EmbassyWithCountry.City</h1>
    }*@


    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/@Model.Country">@Model.Country</a></li>
            <li class="breadcrumb-item active" aria-current="page">Embassy of @Model.Country in @Model.EmbassyWithCountry.Country, @Model.EmbassyWithCountry.City</li>
        </ol>
    </nav>
</div>

<section class="container py-3">
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active" href="#info" data-bs-toggle="tab">🧐 Info</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#docs" data-bs-toggle="tab">🧾 Docs</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#visas" data-bs-toggle="tab">🎫 Visas</a>
        </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade show active" id="info" itemscope="" itemtype="http://schema.org/GovernmentPermit">
            @if (Model.EmbassyWithCountry.Embassy.Name != null)
            {
                <h2 itemprop="name" class="fw-bold text-center p-4 mb-3">🏢 @Html.Raw(HttpUtility.HtmlDecode(Model.EmbassyWithCountry.Embassy.Name)) - information</h2>
            }
            else
            {
                <h2 itemprop="name" class="fw-bold text-center p-4 mb-3">🏢 @Html.Raw(HttpUtility.HtmlDecode($"Embassy of {Model.Country} in {Model.EmbassyWithCountry.Country}, {Model.EmbassyWithCountry.City} - information").Replace("\n", "<br/>"))</h2>
            }

            @if (Model.EmbassyWithCountry.Embassy != null)
            {
                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Address)) 
                {
                    <p itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
                        📍 <small class="text-muted">Address: </small>@Model.EmbassyWithCountry.Embassy.Address</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.WorkingHours))
                {
                    <p>🕜 <small class="text-muted">Office hours: </small>@Html.Raw(Model.EmbassyWithCountry.Embassy.WorkingHours)</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Phone))
                {
                    <p itemprop="telephone">
                        ☎ <small class="text-muted">Phone: </small>@Html.Raw(Model.EmbassyWithCountry.Embassy.Phone)</p>       
                }
                
                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Email))
                {
                    <p itemprop="email">
                        📧 <small class="text-muted">Email: </small>@Model.EmbassyWithCountry.Embassy.Email</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.Url))
                {
                    <p>💻 <small class="text-muted">Website: </small><a href="@Model.EmbassyWithCountry.Embassy.Url" target="_blank" rel="noopener nofollow noreferrer">@Model.EmbassyWithCountry.Embassy.Url</a></p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.ProcessingTime))
                {
                    <p>🚴‍♂️ <small class="text-muted">Processing time: </small>@Model.EmbassyWithCountry.Embassy.ProcessingTime</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.SpecialConditions))
                {
                    <p>☝ <small class="text-muted">Special conditions: </small>@Model.EmbassyWithCountry.Embassy.SpecialConditions</p>
                }

                if(!string.IsNullOrWhiteSpace(Model.EmbassyWithCountry.Embassy.ApplicationFormUrl))
                {
                    <p>🐱‍💻 <small class="text-muted">Visa application form: </small><a href="@Model.EmbassyWithCountry.Embassy.ApplicationFormUrl" target="_blank" rel="noopener nofollow noreferrer"> link</a></p>
                }                
            }
            else
            {
                <p>🤔 Details not found.. Working on it.</p>
            }

        </div>

        <div class="tab-pane fade" id="docs">
            <h2 class="fw-bold text-center p-4">Checklist of documents for visa to @Model.Country</h2>

            @foreach (var d in Model.Docs)
            {
                <ul>
                    <li>@d.Text</li>
                </ul>
            }
        </div>

        <div class="tab-pane fade" id="visas">
            <h2 class="fw-bold text-center p-4">Types of visas allowed at the embassy</h2>

            @foreach (var visa in Model.VisaDetails)
            {
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Description</th>
                            <th scope="col">Duration</th>
                            <th scope="col">Extendable</th>
                            <th scope="col">Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="v in visas" :key="v.name">
                            <th scope="row">@visa.Name</th>
                            <td>@visa.Description</td>
                            <td>@visa.Duration</td>
                            <td>@visa.IsExtendable ? "Yes" : "No"</td>
                            <td>@visa.Currency @visa.Price</td>
                        </tr>
                    </tbody>
                </table>
            }
        </div>
    </div>

</section>