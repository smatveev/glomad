@using API.Helpers
@using API.Models
@model VisaSearchResult

<div class="row mb-3 bg-light rounded-3 border shadow-sm">
    <div class="col-md-3 p-3">
        <a class="card-title align-middle fw-bold text-decoration-none" href="/@Model.CountryName/Visa/@Model.Id">
            @Model.VisaName
        </a>
        @if (Model.Reviews.Count > 0)
        {
            <p class="align-middle rounded-3 ms-0 m-2 p-0 bg-white-opacy">
                ⭐ @Model.Reviews.Count Reviews
            </p>
            @*<h5 class="card-title text-center align-middle lh-1 p-2">@visa.Reviews.Count Reviews</h5>*@
        }
        <p class="align-left rounded-3 my-2 p-0 bg-white-opacy">
            @if (Model.Income > 0)
            {
                <span class="m-2 p-2 badge rounded-pill bg-secondary">
                    🤑 Income $ @Model.Income
                </span>
            }
            @if (!string.IsNullOrEmpty(Model.Cost))
            {
                <span class="m-2 p-2 badge rounded-pill bg-secondary">
                    💰 Cost of program $ @Model.Cost
                </span>
            }
        </p>

        @*else
        {
        <p class="align-middle rounded-3 py-2 bg-white-opacy">
        👋 Add an anonymous review
        </p>
        }*@
    </div>
    <div class="col-md-5 p-3">
        @if (Model.Reviews != null && Model.Reviews.Count > 0)
        {
            string simpleR = "r1";
            string simpleT = "🤯 Complicated to get";
            int simple = (int)Model.Reviews.Average(i => i.Simplicity) * 100 / 5;
            if (simple > 35 && simple < 75)
            {
                simpleR = "r3";
                simpleT = "🤨 Medium to get";
            }
            if (simple >= 75)
            {
                simpleR = "r5";
                simpleT = "😎 Easy to get";
            }

            string waitR = "r1";
            string waitT = "🐢 Low prepare time";
            int wait = (int)Model.Reviews.Average(i => i.Waiting) * 100 / 5;
            if (wait > 35 && wait < 75)
            {
                waitR = "r3";
                waitT = "🦘 Medium prepate time";
            }
            if (wait >= 75)
            {
                waitR = "r5";
                waitT = "🐎 Prepare fast";
            }


            int loy = (int)Model.Reviews.Average(i => i.Loyalty) * 100 / 5;
            string loyR = "r1";
            string loyT = "👎 Low loyality";
            if (loy > 35 && loy < 75)
            {
                loyR = "r3";
                loyT = "👌 Avarage loyality";
            }
            if (loy >= 75)
            {
                loyR = "r5";
                loyT = "👋 Perfect loyality";
            }

            @*<p class="align-middle text-white rounded-3 py-2 px-3 bg-white-opacy">
        @simpleT
        </p>
        <p class="align-middle text-white rounded-3 py-2 px-3 bg-white-opacy">
        @waitT
        </p>
        <p class="align-middle text-white rounded-3 py-2 px-3 bg-white-opacy">
        @loyT
        </p>*@
            <span class="m-2 p-2 badge rounded-pill @simpleR text-dark">@simpleT</span>
            <span class="m-2 p-2 badge rounded-pill @waitR text-dark">@waitT</span>
            <span class="m-2 p-2 badge rounded-pill @loyR text-dark">@loyT</span>
        }

        @if (Model.IsExdendable)
        {
            @*<p class="align-middle text-white rounded-3 py-2 px-3 bg-white-opacy">
        ✨ Extendable
        </p>*@
            <span class="m-1 p-2 badge rounded-pill text-dark border border-secondary border-1">
                ✨ Extendable
            </span>
        }
        @if (Model.Duration > 0)
        {
            @*<p class="align-middle text-white rounded-3 py-2 px-3 bg-white-opacy">
        🕜 Duration @visa.Duration days
        </p>*@
            <span class="m-1 p-2 badge rounded-pill text-dark border border-secondary border-1">
                🕜 Duration @Model.Duration days
            </span>
        }
        @if(!string.IsNullOrEmpty(Model.Type))
        {
            <span class="m-1 p-2 badge rounded-pill text-dark border border-secondary border-1">
                🐱‍👤 @Model.Type
            </span>    
        }
        
    </div>
    <div class="col-md-4 p-3">
        <span>
            @Model.Description.Truncate(100).StripHTML()...
        </span>
    </div>
</div>