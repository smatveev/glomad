@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv

@model HeaderViewModel

@{
    string bgimage = Model.CountryName.ToLower() + ".jpg";
    var path = System.IO.Path.Combine(hostingEnv.WebRootPath + "\\assets\\country\\", bgimage);
    if (!System.IO.File.Exists(path))
    {
        bgimage = "nocover.jpg";
    }
}

<div class="hero-bg px-4 pt-4 pb-5 text-white text-center" style="background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.7)), url('/@bgimage');">


    <header class="navbar navbar-expand-lg">
        <nav class="container-xxl bd-gutter flex-wrap flex-lg-nowrap">
            <div class="container d-flex flex-wrap justify-content-center py-3">
                <h3>
                    <a href="/" class="text-white fw-bold">
                        <div class="logo-box me-2"></div> Glomad.net
                    </a>
                </h3>
                <div class="btn-group ms-auto">
                    <button type="button" class="btn text-white dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        🌏 Explore
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/visa-for-nomads">Best digital nomad visas</a></li>
                        <li><a class="dropdown-item" href="/visa-for-tourist">Best business visas</a></li>
                        <li><a class="dropdown-item" href="/visa-for-startup">Best startup visas</a></li>
                        <li><a class="dropdown-item" href="/visa-for-student">Best student visas</a></li>
                        <li><a class="dropdown-item" href="/visa-for-work">Best work visas</a></li>
                        @*<li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#">Separated link</a></li>*@
                    </ul>
                </div>
            </div>
        </nav>
    </header>


    <h1 class="text-white py-4 fw-bold display-3">
        @if (string.IsNullOrEmpty(Model.VisaName))
        {            
            @*<a class="text-white" href="/">
                <div class="logo-box"></div>
            </a>*@
            @*<span class="carousel-control-next-icon"></span>*@
            @Model.CountryName
            if (!string.IsNullOrEmpty(Model.HomeCountryName))
            {
                @: for citizens of @Model.HomeCountryName
            }
        }
        else
        {
            <a class="text-white" href="/">
                <div class="logo-box"></div>
            </a>
            <span class="carousel-control-next-icon"></span>
            <a class="text-white" href="/@Model.CountryName">@Model.CountryName</a>
            <span class="carousel-control-next-icon"></span>
            <a class="text-white" href="">@Model.VisaName</a>
        }
    </h1>

    @*<h2 class="fw-bold">Your citizen passport is:</h2>
    <cache expires-after="@TimeSpan.FromMinutes(60)">
        @await Component.InvokeAsync("Menu")
    </cache>*@

    @if(!string.IsNullOrEmpty(@Model.Text)) {
        <p class="container custom-scrollbar Gcontainer col-lg-8 mx-auto col-lg-8 col-sm-12 mx-auto rounded-3 p-3 mt-3 bg-black-opacy">
            @Model.Text.Trim()
        </p>
    }
    
    @if (Model.LastUpdate != null)
    {
        <h6 class="col-lg-8 mx-auto shadowed">
            Last Update @Model.LastUpdate
        </h6>
    }

</div>

@*<partial name="_News" />*@