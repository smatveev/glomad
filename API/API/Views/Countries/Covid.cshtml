@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv
@using API.Helpers;

@model CovidPage

@{
    ViewData["Title"] = $"{Model.Header.CountryName} COVID-19 travel restrictions, quarantine and entry requrements. Last update {Model.Country.UpdateDate}.";
 ViewData["MetaDescription"] = $"Up-to-date info on COVID-19 travel restrictions for {Model.Header.CountryName}. Explore entry and quarantine requirements for {Model.Header.CountryName} in {DateTime.Now.Year}. What are covid restrictions in {Model.Country.Name} now.";
 ViewData["Canonical"] = $"https://glomad.net/{Model.Header.CountryName}/Covid";
}

@await Html.PartialAsync("_Header", Model.Header)

<section class="container py-3">

    @await Html.PartialAsync("_Menu", Model.Header.CountryName)

    <h2 class="text-center p-4">🦠 The COVID-19 travel restrictions in @Model.Header.CountryName</h2>
    <div>@Html.Raw(Model.AmadeusTravelRestrictions.data.summary)</div>
   
    <div class="row row-cols-auto d-flex justify-content-center">
        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">😷 Mask wearing - @Model.AmadeusTravelRestrictions.data.areaAccessRestriction.mask.isRequired</h5>
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.mask.text.AddRelAttrs())
            </div>
        </div>
        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">🚎 Transport banned - @Model.AmadeusTravelRestrictions.data.areaAccessRestriction.transportation.isBanned</h5>
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.transportation.text.AddRelAttrs())
            </div>
        </div>
        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">📃 Declaration documnents - @Model.AmadeusTravelRestrictions.data.areaAccessRestriction.declarationDocuments.documentRequired</h5>
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.declarationDocuments.text.AddRelAttrs())
            </div>
        </div>
        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">🛂 Entry - @Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.ban</h5>
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.text.AddRelAttrs())
                <h5>Rules</h5>
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.text.AddRelAttrs())
                @if (Model.BannedCountries != null)
                {
                    <h5>Banned area</h5>
                    <p>@String.Join("; ", Model.BannedCountries)</p>
                }
                @if (Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.borderBan != null)
                {
                    <h5>Border ban</h5>
                    foreach (var b in Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.borderBan)
                    {
                        if (b.borderType.Equals("landBorderBan"))
                        {
                            <p>🚊 Land border - @b.status</p>
                        }
                        if (b.borderType.Equals("maritimeBorderBan"))
                        {
                            <p>🚢 Maritime border - @b.status</p>
                        }
                        if (b.borderType.Equals("airBorderBan"))
                        {
                            <p>✈ Air border - @b.status</p>
                        }

                    }
                }

            </div>
        </div>
        @if (@Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.isRequired.ToString() != "No")
        {
            <div class="col">
                <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">✅ Disease testing required - @Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.isRequired</h5>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.text.AddRelAttrs())</p>
                <h5>When</h5>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.when.AddRelAttrs())</p>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.requirement.AddRelAttrs())</p>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.rules.AddRelAttrs())</p>
                <h5>Test type</h5>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.testType)</p>
                <h5>Validity period</h5>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.validityPeriod.delay)</p>
            </div>
        </div>
        }
        @if (@Model.AmadeusTravelRestrictions.data.areaAccessRestriction.tracingApplication.isRequired != "No")
        {
            <div class="col">
                <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">📱 Tracing applicaiton required - @Model.AmadeusTravelRestrictions.data.areaAccessRestriction.tracingApplication.isRequired</h5>
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.tracingApplication.text.AddRelAttrs())
            </div>
        </div>
        }
        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">🌐 Quarantine modality</h5>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.eligiblePerson.AddRelAttrs())</p>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.rules.AddRelAttrs())</p>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.text.AddRelAttrs())</p>
            </div>
        </div>
        @if (!string.IsNullOrEmpty(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.otherRestriction.text))
        {
            <div class="col text-center">
                <div class="rounded-5 shadow-lg p-3 m-2">
                    <h4>🤚 Other restrictions</h4>
                    <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.otherRestriction.text.AddRelAttrs())</p>
                </div>
            </div>
        }

        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <h5 class="text-center">💉 Qualified vaccines in @Model.Header.CountryName</h5>
                @foreach (var v in Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseVaccination.qualifiedVaccines)
                {
                    <p>@v</p>
                }
            </div>
        </div>
    </div>

    @*<h4 class="text-center p-4">✅ List of approved vaccines in @Model.Header.CountryName</h4>
    <div class="row -row-cols-auto d-flex justify-content-center">
        @foreach (var v in ApprovedVaccines.Vaccines.Where(v => Model.ApprovedVaccines.Contains(v.Key)))
        {
            <div class="-col col-12 col-sm-6 col-xl-2 col-md-4 text-center">
                <div class="rounded-5 shadow-lg p-3 m-2" style="background-color: #fafcfd;">
                    @v.Value
                </div>
            </div>
        }
    </div>*@


    <h4 class="text-center p-4">📈 Disease statistics</h4>
    <div class="row row-cols-auto d-flex justify-content-center">
        <div class="col">
            <div class="rounded-5 shadow-lg p-3 m-2">
                <p>
                    Risk level: @Model.AmadeusTravelRestrictions.data.diseaseRiskLevel;
                    Rate: @Model.AmadeusTravelRestrictions.data.diseaseInfection.rate;
                    Level: @Model.AmadeusTravelRestrictions.data.diseaseInfection.level.
                    Source: <a target="_blank" rel="noopener nofollow noreferrer"
                               href="@Model.AmadeusTravelRestrictions.data.dataSources.governmentSiteLink">
                        @Model.AmadeusTravelRestrictions.data.dataSources.governmentSiteLink
                    </a>
                </p>
                @if (Model.AmadeusTravelRestrictions.data.hotspots != null)
                {
                    <h5>Hot spots</h5>
                    @Html.Raw(string.Join(", ", @Model.AmadeusTravelRestrictions.data.hotspots))
                }

            </div>
        </div>
    </div>

    <h4 class="text-center p-4">🤚 Area restrictions</h4>
    @if (Model.AmadeusTravelRestrictions.data.areaRestrictions != null)
    {
        @foreach (var area in Model.AmadeusTravelRestrictions.data.areaRestrictions)
        {
            <h5>@area.restrictionType</h5>
            <p>@Html.Raw(area.text.AddRelAttrs())</p>
        }

    }


    <h4 class="text-center p-4">⚠ Current covid restrictions in @Model.Header.CountryName</h4>
    <div class="row row-cols-auto d-flex justify-content-center">
        @foreach (var v in Model.Restrictions)
        {
            string Restriction, Level;
            try
            {
                CovidRestrictions.Restrictions.TryGetValue(v.Key, out Restriction);
                CovidRestrictions.Levels[v.Key].TryGetValue(v.Value, out Level);
                <div class="col text-center">
                    <div class="rounded-5 shadow-lg p-3 m-2 @("c" + v.Value)">
                        @Restriction – @Level
                    </div>
                </div>
            }
            catch (Exception e)
            {
            }
        }
    </div>


    @*<h4 class="text-center pt-5">🧾 Entry conditions</h4>
        <div class="p-3">@Html.Raw(Model.Covid)</div>*@

</section>