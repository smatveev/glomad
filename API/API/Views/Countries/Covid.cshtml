@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv
@using API.Helpers;
@using System.Text.RegularExpressions

@model CovidPage

@{
    ViewData["Title"] = $"{Model.Header.CountryName} COVID-19 travel restrictions, quarantine and entry requrements. Last update {Model.Country.UpdateDate}.";
    ViewData["MetaDescription"] = $"Up-to-date info on COVID-19 travel restrictions for {Model.Header.CountryName}. Explore entry and quarantine requirements for {Model.Header.CountryName} in {DateTime.Now.Year}. What are covid restrictions in {Model.Country.Name} now.";
    ViewData["Canonical"] = $"https://glomad.net/{Model.Header.CountryName}/Covid";
}

@await Html.PartialAsync("_Header", Model.Header)

<section class="container py-3">

    @await Html.PartialAsync("_Menu", Model.Header.CountryName)

    @*<h2 class="text-center p-4">🦠 The COVID-19 travel restrictions in @Model.Header.CountryName</h2>*@

    <div class="container mt-5">

        <div class="row">
            <div class="col-md-3">
                @if(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.entry?.ban?.ToLower() == "no")
                {
                    <h2 style="color: green">Open to visit</h2>
                    <p>International travel to @Model.Header.CountryName is allowed, but you’ll have to meet some requirements to enter.</p>
                }
                else if (Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.entry?.ban?.ToLower() == "yes")
                {
                    <h2 style="color: red">Major restrictions</h2>
                    <p>Travel to @Model.Header.CountryName may not be possible or there are very strict requirements in place on arrival or return.</p>
                }
                else
                {
                    <h2 style="color: orange">Partially open</h2>
                    <p>Visiting @Model.Header.CountryName is possible, but you may have to quarantine on arrival or return.</p>
                }
            </div>
            <div class="col-md-3">
                <h2>Travel guidelines</h2>

                <h6>🛬 Quarantine on arrival in @Model.Header.CountryName</h6>
                <p><a href="#Quarantinemodality">@Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.eligiblePerson</a></p>

                <h6 class="pt-4">🛬 Quarantine on return to 
                    <a href="../@Model.HomeCountry">@Model.HomeCountry</a>
                </h6>
                <p>Quarantine is not required</p>
            </div>

            <div class="col-md-3">
                <h2>COVID-19 statistics</h2>
                <h6>Infection risk level</h6>
                <h4>📉 @Model.AmadeusTravelRestrictions.data.diseaseRiskLevel</h4>

                <h6 class="pt-4">New COVID-19 cases in last 14 days</h6>
                <h4>🦠 @Model.AmadeusTravelRestrictions.data.diseaseInfection.rate</h4>
                <p class="small text-muted">out of 100,000 people</p>
            </div>

            <div class="col-md-3">
                <h2>Ready to go?</h2>
                <p>
                    <a href="https://safetywing.com/?referenceID=24744359&amp;utm_source=24744359&amp;utm_medium=Ambassador" rel="noopener nofollow noreferrer">
                        Nomad innsurance COVID-19 coverage
                    </a>
                </p>
                <p>
                    <a href="https://booking.tp.st/rml4gWLG" rel="noopener nofollow noreferrer">
                        Book hotel in @Model.Header.CountryName
                    </a>
                </p>
                <p>
                    <a href="https://aviasales.tp.st/hJye4HU1" rel="noopener nofollow noreferrer">
                        Cheap flight tickets to @Model.Header.CountryName
                    </a>
                </p>
                <p>
                    <a href="https://rentalcars.tp.st/dZJ6XQZa" rel="noopener nofollow noreferrer">
                        Rent a car in @Model.Header.CountryName
                    </a>
                </p>
            </div>
        </div>
    </div>
    <hr />
   
    <div class="row">
        <div class="col-md-8">

        <div class="pb-4" id="Masks">
            @if(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.mask?.isRequired?.ToLower() == "yes")
            {
                <h4 style="color: red">😷 Masks are required</h4>
            }
            else
            {
                <h4 style="color: green">😷 Masks are optional</h4>
            }
            @Html.Raw(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.mask?.text?.AddRelAttrs())
        </div>

        <div class="pb-4" id="Transport">
            @if(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.transportation?.isBanned?.ToLower() == "yes")
            {
                <h4 style="color: red">🚎 Transport is banned</h4>
            }
            else
            {
                <h4 style="color: green">🚎 Transport is allowed</h4>
            }
            @Html.Raw(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.transportation?.text?.AddRelAttrs())
        </div>
        
        <div class="pb-4" id="Documnents">
            <h4>📃 Declaration documnents</h4>
            @if(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.declarationDocuments?.text != null)
            {
                <p>There are no any special documents for declaration are required</p>
            }
            else
                @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.declarationDocuments.text.AddRelAttrs())
        </div>

        <div class="pb-4" id="Entry">
            @if(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.entry?.ban?.ToLower() == "no")
            {
                <h4 style="color: green">🛂 Open to visit</h4>
            }
            else if(Model.AmadeusTravelRestrictions?.data?.areaAccessRestriction?.entry?.ban?.ToLower() == "yes")
            {
                <h4 style="color: red">🛂 Closed for travel</h4>
            } 
            else
            {
                <h4 style="color: orange">🛂 Partially open</h4>
            }

            @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.text.AddRelAttrs())
            <h4>Rules</h4>
            @if (Model.BannedCountries != null)
            {
                <h6>Banned countries</h6>
                <p>@String.Join("; ", Model.BannedCountries)</p>
            }
            @if(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.borderBan != null)
            {
                <h6>Border ban</h6>
                foreach (var b in Model.AmadeusTravelRestrictions.data.areaAccessRestriction.entry.borderBan)
                {
                    if (b.borderType.Equals("landBorderBan"))
                    {
                        <p>🚊 Land border - @b.status</p>
                    }
                    if (b.borderType.Equals("maritimeBorderBan"))
                    {
                        <p>🚢 Maritime border - @b.status</p>
                    }
                    if (b.borderType.Equals("airBorderBan"))
                    {
                        <p>✈ Air border - @b.status</p>
                    }

                }
            }
        </div>

        @if (@Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.isRequired.ToLower().Equals("yes"))
        {
            <div class="pb-4" id="Tests">
                <h4 style="color: orange">🧪 Disease testing required</h4>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.text.AddRelAttrs())</p>
                <h4>When</h4>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.when.AddRelAttrs())</p>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.requirement.AddRelAttrs())</p>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.rules.AddRelAttrs())</p>
                <h4>Test type</h4>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.testType)</p>
                <h4>Validity period</h4>
                <p>@Html.Raw(Regex.Match(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseTesting.validityPeriod.delay, @"\d+").Value) hours</p>
            </div>
        }

        @if (@Model.AmadeusTravelRestrictions.data.areaAccessRestriction.tracingApplication.isRequired.ToList().Equals("yes"))
        {
            <div class="pb-4" style="color:orange" id="App">
                <h4>📱 Tracing applicaiton required</h4>
                <p>
                    @Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.tracingApplication.text.AddRelAttrs())
                </p>
            </div>
        }
        <div class="pb-4" id="Quarantinemodality">
            <h4>🌐 Quarantine modality</h4>
            <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.eligiblePerson.AddRelAttrs())</p>
            <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.rules.AddRelAttrs())</p>
            <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.quarantineModality.text.AddRelAttrs())</p>
        </div>

        <div class="pb-4" id="Vaccines">
            <h4>💉 Qualified vaccines</h4>
            @foreach (var v in Model.AmadeusTravelRestrictions.data.areaAccessRestriction.diseaseVaccination.qualifiedVaccines)
            {
                <p>@v</p>
            }
        </div>

        @if(Model.AmadeusTravelRestrictions.data.areaRestrictions != null)
        {
            <div class="pb-4" id="Arearestrictions">
                <h4>🤚 Area restrictions</h4>
                @foreach (var area in Model.AmadeusTravelRestrictions.data.areaRestrictions)
                {
                    <h6>@area.restrictionType</h6>
                    <p>@Html.Raw(area.text.AddRelAttrs())</p>
                }
            </div>
        }

        @if(!string.IsNullOrWhiteSpace(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.otherRestriction.text))
        {
            <div class="pb-4" id="other">
                <h4>🤚 Other restrictions</h4>
                <p>@Html.Raw(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.otherRestriction.text.AddRelAttrs())</p>
            </div>
        }

        @if (Model.AmadeusTravelRestrictions.data.hotspots != null)
        {
            <div class="pb-4" id="hotspots">
                <h4 >📈 Hot spots</h4>
                    @Html.Raw(string.Join(", ", @Model.AmadeusTravelRestrictions.data.hotspots))
                @if(!String.IsNullOrWhiteSpace(Model.AmadeusTravelRestrictions.data.dataSources.governmentSiteLink))
                {
                    <p class="small text-muted">
                    Source: <a target="_blank" rel="noopener nofollow noreferrer" href="@Model.AmadeusTravelRestrictions.data.dataSources.governmentSiteLink">
                        @Model.AmadeusTravelRestrictions.data.dataSources.governmentSiteLink
                    </a>
                </p>
                }
                
            </div>
        }

    </div>

        <div class="col-md-4">
              <div class="position-sticky" style="top: 2rem;">
                <div class="p-4 mb-3 bg-light rounded">
                  <h4 class="fst-italic">Good to know</h4>
                  <p class="mb-0 text-muted small">@Html.Raw(Model.AmadeusTravelRestrictions.data.summary)</p>
                </div>

                <div class="p-4">
                  <h4>Category</h4>
                  <ol class="list-unstyled mb-0">
                    <li><a href="#Masks">Masks</a></li>
                    <li><a href="#Transport">Transport</a></li>
                    <li><a href="#Documnents">Documnents declaration</a></li>
                    <li><a href="#Entry">Entry</a></li>
                    <li><a href="#Tests">PCR/Antigen/NAAT tests</a></li>

                    @if (@Model.AmadeusTravelRestrictions.data.areaAccessRestriction.tracingApplication.isRequired.ToList().Equals("yes"))
                    {
                        <li><a href="#App">Trasing application</a></li>
                    }

                    <li><a href="#Quarantinemodality">Quarantine </a></li>
                    <li><a href="#Vaccines">Qualified vaccines</a></li>

                    @if(Model.AmadeusTravelRestrictions.data.areaRestrictions != null)
                    {
                        <li><a href="#Arearestrictions">Area restrictions</a></li>       
                    }

                    @if (Model.AmadeusTravelRestrictions.data.hotspots != null)
                    {
                        <li><a href="#hotspots">Hot spots</a></li>    
                    }

                    @if(!string.IsNullOrWhiteSpace(Model.AmadeusTravelRestrictions.data.areaAccessRestriction.otherRestriction.text))
                    {
                        <li><a href="#other">Other restrictions</a></li>
                    }
                  </ol>
                </div>
              </div>
            </div>

    @*<h4 class="text-center p-4">⚠ Current covid restrictions in @Model.Header.CountryName</h4>
    <div class="row row-cols-auto d-flex justify-content-center">
        @foreach (var v in Model.Restrictions)
        {
            string Restriction, Level;
            try
            {
                CovidRestrictions.Restrictions.TryGetValue(v.Key, out Restriction);
                CovidRestrictions.Levels[v.Key].TryGetValue(v.Value, out Level);
                <div class="col text-center">
                    <div class="rounded-5 shadow-lg p-3 m-2 @("c" + v.Value)">
                        @Restriction – @Level
                    </div>
                </div>
            }
            catch (Exception e)
            {                
            }
        }
    </div>*@

    </div>

    @*<h4 class="text-center pt-5">🧾 Entry conditions</h4>
        <div class="p-3">@Html.Raw(Model.Covid)</div>*@

</section>