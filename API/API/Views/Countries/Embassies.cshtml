@using System.Globalization;
@using System.Web;
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment hostingEnv

@model EmbassiesPage

@{
    ViewData["Title"] = String.IsNullOrEmpty(Model.Country.Citizen) ? $"List of Embassies and Consulates of {Model.Country.Name} around the world in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}." : $"List of {Model.Country.Citizen} Embassies and Consulates around the world in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}.";
    ViewData["MetaDescription"] = $"Embassies and consulates of {Model.Country.Name} in different countries in {DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)} of {DateTime.Now.Year}. Find the needed embassy of {Model.Country.Name} and its information. Addresses, telephone numbers, email addresses, websites, opening hours.";
    ViewData["Canonical"] = $"https://glomad.net/{Model.Header.CountryName}/Embassies";
}

@await Html.PartialAsync("_Header", Model.Header)
@await Html.PartialAsync("_Menu", Model.Header.CountryName)


<section class="container sectionstyle">

    <div class="row">

        <div class="col-md-8 px-4 text-break">
            <h2 class="text-center p-4 pb-1">List of Embassies and Consulates of @Model.Header.CountryName</h2>

            @if (Model.Embassies.Count > 0)
            {
                string curCountry = string.Empty;

                @foreach (var e in Model.Embassies)
                {
                    if (curCountry == string.Empty || !string.Equals(curCountry, e.Country))
                    {
                        <h4 class="pt-4">
                            <span class="flag-icon flag-icon-@e.Iata.ToLower() flag-icon"></span>
                            <a href="/@e.Country">@e.Country</a>
                        </h4>
                    }                    
                    curCountry = Model.Embassies[0].Country;


                    string title;
                    if (e.Embassy.Name != null)
                    {
                        title = Html.Raw(HttpUtility.HtmlDecode(e.Embassy.Name)) + " in " + e.City;
                    }
                    else
                    {
                        title = Html.Raw(HttpUtility.HtmlDecode($"Embassy of {Model.Country.Name} in {e.Country}, {e.City}").Replace("\n", "<br/>")).ToString();
                    }

                    @if (!string.Equals(curCountry, e.Country))
                    {
                        curCountry = e.Country;
                        
                    }

                    <p class="mb-1"><a href="#">@title</a></p>

                        @*<div class="row mb-2 bg-white border rounded-booking">                            

                            <div class="col-12 col-lg-2 p-3">

                                <a class="card-title align-middle">
                                    <h6 class="-card-title font-weight-bold">
                                        @title
                                    </h6>
                                </a>                                

                            </div>

                            <div class="col-12 col-lg-5 p-3">
                                @if(!string.IsNullOrWhiteSpace(e.Embassy.WorkingHours))
                                {
                                <p class="me-2 mb-2 p-2 badge white-space-normal text-dark rounded-pill bg-light">
                                        🕜 <small class="text-muted">Office hours: </small> @Html.Raw(e.Embassy.WorkingHours)
                                    </p>
                                }

                                @if(!string.IsNullOrWhiteSpace(e.Embassy.Phone))
                                {
                                <p class="me-2 mb-2 p-2 badge text-dark white-space-normal rounded-pill bg-light" itemprop="telephone">
                                        ☎ <small class="text-muted">Phone: </small>@Html.Raw(e.Embassy.Phone)
                                    </p>
                                }

                                @if(!string.IsNullOrWhiteSpace(e.Embassy.Email))
                                {
                                    <p class="me-2 mb-2 p-2 badge text-dark rounded-pill bg-light" itemprop="email">
                                        📧 <small class="text-muted">Email: </small>@e.Embassy.Email
                                    </p>
                                }

                                @if(!string.IsNullOrWhiteSpace(e.Embassy.Url))
                                {
                                    <p class="me-2 mb-2 p-2 badge text-dark rounded-pill bg-light">
                                        💻 <small class="text-muted">Website: </small>
                                        <a href="@e.Embassy.Url" target="_blank" rel="noopener nofollow noreferrer">@e.Embassy.Url</a>
                                    </p>
                                }

                                @if(!string.IsNullOrWhiteSpace(e.Embassy.ProcessingTime))
                                {
                                    <p class="me-2 mb-2 p-2 badge text-dark rounded-pill bg-light">
                                        🚴‍♂️ <small class="text-muted">Processing time: </small>@e.Embassy.ProcessingTime
                                    </p>
                                }

                                @if(!string.IsNullOrWhiteSpace(e.Embassy.SpecialConditions))
                                {
                                    <p class="me-2 mb-2 p-2 badge text-dark rounded-pill bg-light">
                                        ☝ <small class="text-muted">Special conditions: </small>@e.Embassy.SpecialConditions
                                    </p>
                                }

                                @if(!string.IsNullOrWhiteSpace(e.Embassy.ApplicationFormUrl))
                                {
                                    <p class="me-2 mb-2 p-2 badge text-dark rounded-pill bg-light">
                                        🐱‍💻 <small class="text-muted">Visa application form: </small><a href="@e.Embassy.ApplicationFormUrl" target="_blank" rel="noopener nofollow noreferrer"> link</a>
                                    </p>
                                }                               
                            </div>


                            <div class="col-12 col-lg-5 p-3">
                                @if (!string.IsNullOrWhiteSpace(e.Embassy.Address))
                                {
                                    <p itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
                                        📍 <small class="text-muted">Address: </small>@e.Embassy.Address
                                    </p>
                                <button type="button" class="btn btn-light btn-sm">🗺 Show on map</button>
                                }
                            </div>


                        </div>*@
                    //}
                }
                
                

               @* <div class="row row-cols-2 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
                    @foreach (var e in Model.Embassies)
                    {
                        <div class="col">
                            <a href="/@Model.Header.CountryName/Embassy/@e.Id">
                                @{
                                    var countryImage = @e.Country.ToLower();
                                    var path2 = System.IO.Path.Combine(hostingEnv.WebRootPath, countryImage + ".jpg");
                                    if (!System.IO.File.Exists(path2))
                                    {
                                        countryImage = "nocover";
                                    }
                                }
                                <div class="card bg-dark text-white border-0 rounded-5 card-cover shadow-lg" style="background-image: url('../@(countryImage)_300.jpg');">
                                    @*<img src="../@(countryImage).jpg" class="img-fluid rounded-5" srcset="../@(countryImage)_300.jpg 384w, ../@(countryImage).jpg 1920w" sizes="50vw" alt="@c.Name image">*@
                                    @*<div class="card-img-overlay">
                                        <h3 class="card-title shadowed text-center align-middle mt-5 mb-3 lh-1 fw-bold">@e.Country</h3>
                                        <h5 class="card-title shadowed text-center align-middle lh-1 fw-bold">@e.City</h5>
                                    </div>*@
@*                                </div>
                            </a>
                        </div>*@
                    @*}
                </div>*@
            }
            else
            {
                <h4 class="text-center p-4">
                    The list of @Model.Header.CountryName embassies does not ready yet.
                    @await Component.InvokeAsync("SubscribeUpdates")
                    , please, to updates. We'll let you know as soon as the section is ready.
                </h4>
            }

        </div>

        <div class="col-md-4 p-4">

            <div class="position-sticky" style="top: 2rem;">

                @await Html.PartialAsync("_SubscribeUpdates")

                <div class="bg-light rounded-booking mb-3 mt-1">
                    <p>all embassies on map</p>
                </div>

                <div class="bg-light rounded-booking mb-3 mt-1">
                    <a href="https://safetywing.com?referenceID=24744359&utm_source=24744359&utm_medium=Ambassador" rel="noopener nofollow noreferrer">
                        <div class="card bg-dark text-white border-0 card-cover" style="background-image: url('../safetywind_300.jpg');">
                            <div class="card-img-overlay text-center">
                                <h3 class="card-title shadowed mt-5 lh-1 fw-bold">Global travel medical insurance</h3>
                                <p class="m-1 badge rounded-pill bg-info text-dark">for $1.5/day!</p>
                                <p class="m-1 badge rounded-pill bg-warning text-dark">Covid-19 coverage</p>
                            </div>
                        </div>
                    </a>
                </div>

            </div>
        </div>

    </div>

    
    
</section>